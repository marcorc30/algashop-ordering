<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.algaworks.algashop.ordering.infrastructure.persistence.provider.OrderPersistenceProviderTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2025-10-01T22:16:47.752Z" hostname="marco-Inspiron-3583" time="0.1">
  <properties/>
  <testcase name="dado_um_id_verificar_se_order_existe()" classname="com.algaworks.algashop.ordering.infrastructure.persistence.provider.OrderPersistenceProviderTest" time="0.042"/>
  <testcase name="shouldUpdateAndKeepPersistenceEntityState()" classname="com.algaworks.algashop.ordering.infrastructure.persistence.provider.OrderPersistenceProviderTest" time="0.029"/>
  <testcase name="dado_um_order_entity_tentar_consultar_sem_transacao_deve_falhar()" classname="com.algaworks.algashop.ordering.infrastructure.persistence.provider.OrderPersistenceProviderTest" time="0.027"/>
  <system-out><![CDATA[2025-10-01T19:16:47.423-03:00  INFO 209006 --- [ordering] [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.algaworks.algashop.ordering.infrastructure.persistence.provider.OrderPersistenceProviderTest]: OrderPersistenceProviderTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-01T19:16:47.433-03:00  INFO 209006 --- [ordering] [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.algaworks.algashop.ordering.OrderingApplication for test class com.algaworks.algashop.ordering.infrastructure.persistence.provider.OrderPersistenceProviderTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.7)

2025-10-01T19:16:47.463-03:00  INFO 209006 --- [ordering] [    Test worker] a.a.o.i.p.p.OrderPersistenceProviderTest : Starting OrderPersistenceProviderTest using Java 21.0.6 with PID 209006 (started by marco in /home/marco/projetos/EMS/algashop/microsservices/algashop-ordering)
2025-10-01T19:16:47.463-03:00  INFO 209006 --- [ordering] [    Test worker] a.a.o.i.p.p.OrderPersistenceProviderTest : The following 1 profile is active: "test"
2025-10-01T19:16:47.542-03:00  INFO 209006 --- [ordering] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-01T19:16:47.555-03:00  INFO 209006 --- [ordering] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 3 JPA repository interfaces.
2025-10-01T19:16:47.564-03:00  INFO 209006 --- [ordering] [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2025-10-01T19:16:47.573-03:00  INFO 209006 --- [ordering] [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:361a8003-b6e3-43d1-b3b7-d67fbe69d821;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-10-01T19:16:47.591-03:00  INFO 209006 --- [ordering] [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-01T19:16:47.593-03:00  INFO 209006 --- [ordering] [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-10-01T19:16:47.599-03:00  INFO 209006 --- [ordering] [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-01T19:16:47.600-03:00  WARN 209006 --- [ordering] [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-01T19:16:47.601-03:00  INFO 209006 --- [ordering] [    Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@3343ad78']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-01T19:16:47.659-03:00  INFO 209006 --- [ordering] [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: create table customer_persistence_entity (id uuid not null, city varchar(255), complement varchar(255), neighborhood varchar(255), number varchar(255), state varchar(255), street varchar(255), zip_code varchar(255), archived boolean, archived_at timestamp(6) with time zone, birth_date date, create_by_user_id uuid, document varchar(255), email varchar(255), first_name varchar(255), last_modified_at timestamp(6) with time zone, last_modified_by_user uuid, last_name varchar(255), loyalt_points integer, phone varchar(255), promotion_notifications_allowed boolean, registered_at timestamp(6) with time zone, version bigint, primary key (id))
Hibernate: create table "order" (id bigint not null, billing_address_city varchar(255), billing_address_complement varchar(255), billing_address_neighborhood varchar(255), billing_address_number varchar(255), billing_address_state varchar(255), billing_address_street varchar(255), billing_address_zip_code varchar(255), billing_document varchar(255), email varchar(255), billing_first_name varchar(255), billing_last_name varchar(255), billing_phone varchar(255), canceled_at timestamp(6) with time zone, create_by_user_id uuid, last_modified_at timestamp(6) with time zone, last_modified_by_user_id uuid, paid_at timestamp(6) with time zone, payment_method varchar(255), placed_at timestamp(6) with time zone, ready_at timestamp(6) with time zone, shipping_address_city varchar(255), shipping_address_complement varchar(255), shipping_address_neighborhood varchar(255), shipping_address_number varchar(255), shipping_address_state varchar(255), shipping_address_street varchar(255), shipping_address_zip_code varchar(255), shipping_cost numeric(38,2), shipping_expected_date date, shipping_recipient_document varchar(255), shipping_recipient_first_name varchar(255), shipping_recipient_last_name varchar(255), shipping_recipient_phone varchar(255), status varchar(255), total_amount numeric(38,2), total_items integer, version bigint, customer_id uuid not null, primary key (id))
Hibernate: create table order_item (id bigint not null, price numeric(38,2), product_id uuid, product_name varchar(255), quantity integer, total_amount numeric(38,2), "order_id" bigint not null, primary key (id))
Hibernate: create table "shopping_cart" (id uuid not null, created_at timestamp(6) with time zone, created_by_user_id uuid, last_modified_at timestamp(6) with time zone, last_modified_by_user_id uuid, total_amount numeric(38,2), total_items integer, version bigint, customer_id uuid not null, primary key (id))
Hibernate: create table shopping_cart_item (id uuid not null, available boolean, created_at timestamp(6) with time zone, created_by_user_id uuid, last_modified_at timestamp(6) with time zone, last_modified_by_user_id uuid, name varchar(255), price numeric(38,2), product_id uuid, quantity integer, total_amount numeric(38,2), version bigint, "shopping_cart_id" uuid not null, primary key (id))
Hibernate: alter table if exists "order" add constraint FKa9ajwn6xa5c41i013kempf058 foreign key (customer_id) references customer_persistence_entity
Hibernate: alter table if exists order_item add constraint FKsgmrolp8skulmo2vyb20c4mfk foreign key ("order_id") references "order"
Hibernate: alter table if exists "shopping_cart" add constraint FK6b17ahw31id1a481w8ijbxlx9 foreign key (customer_id) references customer_persistence_entity
Hibernate: alter table if exists shopping_cart_item add constraint FKsqefhxject71i5aea80s5vui9 foreign key ("shopping_cart_id") references "shopping_cart"
2025-10-01T19:16:47.672-03:00  INFO 209006 --- [ordering] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-01T19:16:47.750-03:00  INFO 209006 --- [ordering] [    Test worker] a.a.o.i.p.p.OrderPersistenceProviderTest : Started OrderPersistenceProviderTest in 0.314 seconds (process running for 8.636)
Hibernate: select count(*) from customer_persistence_entity cpe1_0 where cpe1_0.id=?
Hibernate: select cpe1_0.id,cpe1_0.city,cpe1_0.complement,cpe1_0.neighborhood,cpe1_0.number,cpe1_0.state,cpe1_0.street,cpe1_0.zip_code,cpe1_0.archived,cpe1_0.archived_at,cpe1_0.birth_date,cpe1_0.create_by_user_id,cpe1_0.document,cpe1_0.email,cpe1_0.first_name,cpe1_0.last_modified_at,cpe1_0.last_modified_by_user,cpe1_0.last_name,cpe1_0.loyalt_points,cpe1_0.phone,cpe1_0.promotion_notifications_allowed,cpe1_0.registered_at,cpe1_0.version from customer_persistence_entity cpe1_0 where cpe1_0.id=?
Hibernate: insert into customer_persistence_entity (city,complement,neighborhood,number,state,street,zip_code,archived,archived_at,birth_date,create_by_user_id,document,email,first_name,last_modified_at,last_modified_by_user,last_name,loyalt_points,phone,promotion_notifications_allowed,registered_at,version,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,c1_0.id,c1_0.city,c1_0.complement,c1_0.neighborhood,c1_0.number,c1_0.state,c1_0.street,c1_0.zip_code,c1_0.archived,c1_0.archived_at,c1_0.birth_date,c1_0.create_by_user_id,c1_0.document,c1_0.email,c1_0.first_name,c1_0.last_modified_at,c1_0.last_modified_by_user,c1_0.last_name,c1_0.loyalt_points,c1_0.phone,c1_0.promotion_notifications_allowed,c1_0.registered_at,c1_0.version,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 join customer_persistence_entity c1_0 on c1_0.id=ope1_0.customer_id where ope1_0.id=?
Hibernate: insert into "order" (billing_address_city,billing_address_complement,billing_address_neighborhood,billing_address_number,billing_address_state,billing_address_street,billing_address_zip_code,billing_document,email,billing_first_name,billing_last_name,billing_phone,canceled_at,create_by_user_id,customer_id,last_modified_at,last_modified_by_user_id,paid_at,payment_method,placed_at,ready_at,shipping_address_city,shipping_address_complement,shipping_address_neighborhood,shipping_address_number,shipping_address_state,shipping_address_street,shipping_address_zip_code,shipping_cost,shipping_expected_date,shipping_recipient_document,shipping_recipient_first_name,shipping_recipient_last_name,shipping_recipient_phone,status,total_amount,total_items,version,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,c1_0.id,c1_0.city,c1_0.complement,c1_0.neighborhood,c1_0.number,c1_0.state,c1_0.street,c1_0.zip_code,c1_0.archived,c1_0.archived_at,c1_0.birth_date,c1_0.create_by_user_id,c1_0.document,c1_0.email,c1_0.first_name,c1_0.last_modified_at,c1_0.last_modified_by_user,c1_0.last_name,c1_0.loyalt_points,c1_0.phone,c1_0.promotion_notifications_allowed,c1_0.registered_at,c1_0.version,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 join customer_persistence_entity c1_0 on c1_0.id=ope1_0.customer_id where ope1_0.id=?
Hibernate: insert into "order" (billing_address_city,billing_address_complement,billing_address_neighborhood,billing_address_number,billing_address_state,billing_address_street,billing_address_zip_code,billing_document,email,billing_first_name,billing_last_name,billing_phone,canceled_at,create_by_user_id,customer_id,last_modified_at,last_modified_by_user_id,paid_at,payment_method,placed_at,ready_at,shipping_address_city,shipping_address_complement,shipping_address_neighborhood,shipping_address_number,shipping_address_state,shipping_address_street,shipping_address_zip_code,shipping_cost,shipping_expected_date,shipping_recipient_document,shipping_recipient_first_name,shipping_recipient_last_name,shipping_recipient_phone,status,total_amount,total_items,version,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: select count(*) from "order" ope1_0 where ope1_0.id=?
Hibernate: select count(*) from "order" ope1_0
Hibernate: select count(*) from customer_persistence_entity cpe1_0 where cpe1_0.id=?
Hibernate: select cpe1_0.id,cpe1_0.city,cpe1_0.complement,cpe1_0.neighborhood,cpe1_0.number,cpe1_0.state,cpe1_0.street,cpe1_0.zip_code,cpe1_0.archived,cpe1_0.archived_at,cpe1_0.birth_date,cpe1_0.create_by_user_id,cpe1_0.document,cpe1_0.email,cpe1_0.first_name,cpe1_0.last_modified_at,cpe1_0.last_modified_by_user,cpe1_0.last_name,cpe1_0.loyalt_points,cpe1_0.phone,cpe1_0.promotion_notifications_allowed,cpe1_0.registered_at,cpe1_0.version from customer_persistence_entity cpe1_0 where cpe1_0.id=?
Hibernate: insert into customer_persistence_entity (city,complement,neighborhood,number,state,street,zip_code,archived,archived_at,birth_date,create_by_user_id,document,email,first_name,last_modified_at,last_modified_by_user,last_name,loyalt_points,phone,promotion_notifications_allowed,registered_at,version,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,c1_0.id,c1_0.city,c1_0.complement,c1_0.neighborhood,c1_0.number,c1_0.state,c1_0.street,c1_0.zip_code,c1_0.archived,c1_0.archived_at,c1_0.birth_date,c1_0.create_by_user_id,c1_0.document,c1_0.email,c1_0.first_name,c1_0.last_modified_at,c1_0.last_modified_by_user,c1_0.last_name,c1_0.loyalt_points,c1_0.phone,c1_0.promotion_notifications_allowed,c1_0.registered_at,c1_0.version,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 join customer_persistence_entity c1_0 on c1_0.id=ope1_0.customer_id where ope1_0.id=?
Hibernate: insert into "order" (billing_address_city,billing_address_complement,billing_address_neighborhood,billing_address_number,billing_address_state,billing_address_street,billing_address_zip_code,billing_document,email,billing_first_name,billing_last_name,billing_phone,canceled_at,create_by_user_id,customer_id,last_modified_at,last_modified_by_user_id,paid_at,payment_method,placed_at,ready_at,shipping_address_city,shipping_address_complement,shipping_address_neighborhood,shipping_address_number,shipping_address_state,shipping_address_street,shipping_address_zip_code,shipping_cost,shipping_expected_date,shipping_recipient_document,shipping_recipient_first_name,shipping_recipient_last_name,shipping_recipient_phone,status,total_amount,total_items,version,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,c1_0.id,c1_0.city,c1_0.complement,c1_0.neighborhood,c1_0.number,c1_0.state,c1_0.street,c1_0.zip_code,c1_0.archived,c1_0.archived_at,c1_0.birth_date,c1_0.create_by_user_id,c1_0.document,c1_0.email,c1_0.first_name,c1_0.last_modified_at,c1_0.last_modified_by_user,c1_0.last_name,c1_0.loyalt_points,c1_0.phone,c1_0.promotion_notifications_allowed,c1_0.registered_at,c1_0.version,i1_0."order_id",i1_0.id,i1_0.price,i1_0.product_id,i1_0.product_name,i1_0.quantity,i1_0.total_amount,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 join customer_persistence_entity c1_0 on c1_0.id=ope1_0.customer_id left join order_item i1_0 on ope1_0.id=i1_0."order_id" where ope1_0.id=?
Hibernate: select oipe1_0.id,oipe1_0."order_id",o1_0.id,o1_0.billing_address_city,o1_0.billing_address_complement,o1_0.billing_address_neighborhood,o1_0.billing_address_number,o1_0.billing_address_state,o1_0.billing_address_street,o1_0.billing_address_zip_code,o1_0.billing_document,o1_0.email,o1_0.billing_first_name,o1_0.billing_last_name,o1_0.billing_phone,o1_0.canceled_at,o1_0.create_by_user_id,o1_0.customer_id,c1_0.id,c1_0.city,c1_0.complement,c1_0.neighborhood,c1_0.number,c1_0.state,c1_0.street,c1_0.zip_code,c1_0.archived,c1_0.archived_at,c1_0.birth_date,c1_0.create_by_user_id,c1_0.document,c1_0.email,c1_0.first_name,c1_0.last_modified_at,c1_0.last_modified_by_user,c1_0.last_name,c1_0.loyalt_points,c1_0.phone,c1_0.promotion_notifications_allowed,c1_0.registered_at,c1_0.version,o1_0.last_modified_at,o1_0.last_modified_by_user_id,o1_0.paid_at,o1_0.payment_method,o1_0.placed_at,o1_0.ready_at,o1_0.shipping_address_city,o1_0.shipping_address_complement,o1_0.shipping_address_neighborhood,o1_0.shipping_address_number,o1_0.shipping_address_state,o1_0.shipping_address_street,o1_0.shipping_address_zip_code,o1_0.shipping_cost,o1_0.shipping_expected_date,o1_0.shipping_recipient_document,o1_0.shipping_recipient_first_name,o1_0.shipping_recipient_last_name,o1_0.shipping_recipient_phone,o1_0.status,o1_0.total_amount,o1_0.total_items,o1_0.version,oipe1_0.price,oipe1_0.product_id,oipe1_0.product_name,oipe1_0.quantity,oipe1_0.total_amount from order_item oipe1_0 join "order" o1_0 on o1_0.id=oipe1_0."order_id" join customer_persistence_entity c1_0 on c1_0.id=o1_0.customer_id where oipe1_0.id=?
Hibernate: select oipe1_0.id,oipe1_0."order_id",o1_0.id,o1_0.billing_address_city,o1_0.billing_address_complement,o1_0.billing_address_neighborhood,o1_0.billing_address_number,o1_0.billing_address_state,o1_0.billing_address_street,o1_0.billing_address_zip_code,o1_0.billing_document,o1_0.email,o1_0.billing_first_name,o1_0.billing_last_name,o1_0.billing_phone,o1_0.canceled_at,o1_0.create_by_user_id,o1_0.customer_id,c1_0.id,c1_0.city,c1_0.complement,c1_0.neighborhood,c1_0.number,c1_0.state,c1_0.street,c1_0.zip_code,c1_0.archived,c1_0.archived_at,c1_0.birth_date,c1_0.create_by_user_id,c1_0.document,c1_0.email,c1_0.first_name,c1_0.last_modified_at,c1_0.last_modified_by_user,c1_0.last_name,c1_0.loyalt_points,c1_0.phone,c1_0.promotion_notifications_allowed,c1_0.registered_at,c1_0.version,o1_0.last_modified_at,o1_0.last_modified_by_user_id,o1_0.paid_at,o1_0.payment_method,o1_0.placed_at,o1_0.ready_at,o1_0.shipping_address_city,o1_0.shipping_address_complement,o1_0.shipping_address_neighborhood,o1_0.shipping_address_number,o1_0.shipping_address_state,o1_0.shipping_address_street,o1_0.shipping_address_zip_code,o1_0.shipping_cost,o1_0.shipping_expected_date,o1_0.shipping_recipient_document,o1_0.shipping_recipient_first_name,o1_0.shipping_recipient_last_name,o1_0.shipping_recipient_phone,o1_0.status,o1_0.total_amount,o1_0.total_items,o1_0.version,oipe1_0.price,oipe1_0.product_id,oipe1_0.product_name,oipe1_0.quantity,oipe1_0.total_amount from order_item oipe1_0 join "order" o1_0 on o1_0.id=oipe1_0."order_id" join customer_persistence_entity c1_0 on c1_0.id=o1_0.customer_id where oipe1_0.id=?
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: update "order" set billing_address_city=?,billing_address_complement=?,billing_address_neighborhood=?,billing_address_number=?,billing_address_state=?,billing_address_street=?,billing_address_zip_code=?,billing_document=?,email=?,billing_first_name=?,billing_last_name=?,billing_phone=?,canceled_at=?,create_by_user_id=?,customer_id=?,last_modified_at=?,last_modified_by_user_id=?,paid_at=?,payment_method=?,placed_at=?,ready_at=?,shipping_address_city=?,shipping_address_complement=?,shipping_address_neighborhood=?,shipping_address_number=?,shipping_address_state=?,shipping_address_street=?,shipping_address_zip_code=?,shipping_cost=?,shipping_expected_date=?,shipping_recipient_document=?,shipping_recipient_first_name=?,shipping_recipient_last_name=?,shipping_recipient_phone=?,status=?,total_amount=?,total_items=?,version=? where id=? and version=?
Hibernate: select count(*) from customer_persistence_entity cpe1_0 where cpe1_0.id=?
Hibernate: select cpe1_0.id,cpe1_0.city,cpe1_0.complement,cpe1_0.neighborhood,cpe1_0.number,cpe1_0.state,cpe1_0.street,cpe1_0.zip_code,cpe1_0.archived,cpe1_0.archived_at,cpe1_0.birth_date,cpe1_0.create_by_user_id,cpe1_0.document,cpe1_0.email,cpe1_0.first_name,cpe1_0.last_modified_at,cpe1_0.last_modified_by_user,cpe1_0.last_name,cpe1_0.loyalt_points,cpe1_0.phone,cpe1_0.promotion_notifications_allowed,cpe1_0.registered_at,cpe1_0.version from customer_persistence_entity cpe1_0 where cpe1_0.id=?
Hibernate: insert into customer_persistence_entity (city,complement,neighborhood,number,state,street,zip_code,archived,archived_at,birth_date,create_by_user_id,document,email,first_name,last_modified_at,last_modified_by_user,last_name,loyalt_points,phone,promotion_notifications_allowed,registered_at,version,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,c1_0.id,c1_0.city,c1_0.complement,c1_0.neighborhood,c1_0.number,c1_0.state,c1_0.street,c1_0.zip_code,c1_0.archived,c1_0.archived_at,c1_0.birth_date,c1_0.create_by_user_id,c1_0.document,c1_0.email,c1_0.first_name,c1_0.last_modified_at,c1_0.last_modified_by_user,c1_0.last_name,c1_0.loyalt_points,c1_0.phone,c1_0.promotion_notifications_allowed,c1_0.registered_at,c1_0.version,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 join customer_persistence_entity c1_0 on c1_0.id=ope1_0.customer_id where ope1_0.id=?
Hibernate: insert into "order" (billing_address_city,billing_address_complement,billing_address_neighborhood,billing_address_number,billing_address_state,billing_address_street,billing_address_zip_code,billing_document,email,billing_first_name,billing_last_name,billing_phone,canceled_at,create_by_user_id,customer_id,last_modified_at,last_modified_by_user_id,paid_at,payment_method,placed_at,ready_at,shipping_address_city,shipping_address_complement,shipping_address_neighborhood,shipping_address_number,shipping_address_state,shipping_address_street,shipping_address_zip_code,shipping_cost,shipping_expected_date,shipping_recipient_document,shipping_recipient_first_name,shipping_recipient_last_name,shipping_recipient_phone,status,total_amount,total_items,version,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,c1_0.id,c1_0.city,c1_0.complement,c1_0.neighborhood,c1_0.number,c1_0.state,c1_0.street,c1_0.zip_code,c1_0.archived,c1_0.archived_at,c1_0.birth_date,c1_0.create_by_user_id,c1_0.document,c1_0.email,c1_0.first_name,c1_0.last_modified_at,c1_0.last_modified_by_user,c1_0.last_name,c1_0.loyalt_points,c1_0.phone,c1_0.promotion_notifications_allowed,c1_0.registered_at,c1_0.version,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 join customer_persistence_entity c1_0 on c1_0.id=ope1_0.customer_id where ope1_0.id=?
Hibernate: select i1_0."order_id",i1_0.id,i1_0.price,i1_0.product_id,i1_0.product_name,i1_0.quantity,i1_0.total_amount from order_item i1_0 where i1_0."order_id"=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
