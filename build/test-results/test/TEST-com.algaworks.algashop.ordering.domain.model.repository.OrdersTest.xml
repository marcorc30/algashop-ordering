<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.algaworks.algashop.ordering.domain.model.repository.OrdersTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2025-08-21T23:55:00.878Z" hostname="marco-Inspiron-3583" time="14.93">
  <properties/>
  <testcase name="deve_permitir_update_separados()" classname="com.algaworks.algashop.ordering.domain.model.repository.OrdersTest" time="14.853"/>
  <testcase name="deve_persistir_e_localizar()" classname="com.algaworks.algashop.ordering.domain.model.repository.OrdersTest" time="0.014"/>
  <testcase name="deve_atualizar_um_pedido_existente()" classname="com.algaworks.algashop.ordering.domain.model.repository.OrdersTest" time="0.028"/>
  <testcase name="deve_nao_permitir_update_simultaneos()" classname="com.algaworks.algashop.ordering.domain.model.repository.OrdersTest" time="0.031"/>
  <system-out><![CDATA[Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
20:54:58.368 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.algaworks.algashop.ordering.domain.model.repository.OrdersTest]: OrdersTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
20:54:58.500 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.algaworks.algashop.ordering.OrderingApplication for test class com.algaworks.algashop.ordering.domain.model.repository.OrdersTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.7)

2025-08-21T20:54:58.818-03:00  INFO 25230 --- [ordering] [    Test worker] c.a.a.o.d.model.repository.OrdersTest    : Starting OrdersTest using Java 21.0.6 with PID 25230 (started by marco in /home/marco/projetos/EMS/algashop/microsservices/algashop-ordering)
2025-08-21T20:54:58.820-03:00  INFO 25230 --- [ordering] [    Test worker] c.a.a.o.d.model.repository.OrdersTest    : The following 1 profile is active: "test"
2025-08-21T20:54:59.140-03:00  INFO 25230 --- [ordering] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-21T20:54:59.193-03:00  INFO 25230 --- [ordering] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 45 ms. Found 2 JPA repository interfaces.
2025-08-21T20:54:59.247-03:00  INFO 25230 --- [ordering] [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2025-08-21T20:54:59.308-03:00  INFO 25230 --- [ordering] [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:29ef7e61-96b8-4ac3-9f7f-a97df2904d50;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-21T20:54:59.518-03:00  INFO 25230 --- [ordering] [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-21T20:54:59.556-03:00  INFO 25230 --- [ordering] [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-08-21T20:54:59.579-03:00  INFO 25230 --- [ordering] [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-21T20:54:59.758-03:00  INFO 25230 --- [ordering] [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-21T20:54:59.795-03:00  WARN 25230 --- [ordering] [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-21T20:54:59.809-03:00  INFO 25230 --- [ordering] [    Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@68f776ee']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-21T20:55:00.490-03:00  INFO 25230 --- [ordering] [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: create table customer_persistence_entity (id uuid not null, city varchar(255), complement varchar(255), neighborhood varchar(255), number varchar(255), state varchar(255), street varchar(255), zip_code varchar(255), archived boolean, archived_at timestamp(6) with time zone, birth_date date, create_by_user_id uuid, document varchar(255), email varchar(255), first_name varchar(255), last_modified_at timestamp(6) with time zone, last_modified_by_user uuid, last_name varchar(255), loyalt_points integer, phone varchar(255), promotion_notifications_allowed boolean, registered_at timestamp(6) with time zone, version bigint, primary key (id))
Hibernate: create table "order" (id bigint not null, billing_address_city varchar(255), billing_address_complement varchar(255), billing_address_neighborhood varchar(255), billing_address_number varchar(255), billing_address_state varchar(255), billing_address_street varchar(255), billing_address_zip_code varchar(255), billing_document varchar(255), email varchar(255), billing_first_name varchar(255), billing_last_name varchar(255), billing_phone varchar(255), canceled_at timestamp(6) with time zone, create_by_user_id uuid, customer_id uuid, last_modified_at timestamp(6) with time zone, last_modified_by_user_id uuid, paid_at timestamp(6) with time zone, payment_method varchar(255), placed_at timestamp(6) with time zone, ready_at timestamp(6) with time zone, shipping_address_city varchar(255), shipping_address_complement varchar(255), shipping_address_neighborhood varchar(255), shipping_address_number varchar(255), shipping_address_state varchar(255), shipping_address_street varchar(255), shipping_address_zip_code varchar(255), shipping_cost numeric(38,2), shipping_expected_date date, shipping_recipient_document varchar(255), shipping_recipient_first_name varchar(255), shipping_recipient_last_name varchar(255), shipping_recipient_phone varchar(255), status varchar(255), total_amount numeric(38,2), total_items integer, version bigint, primary key (id))
Hibernate: create table order_item (id bigint not null, price numeric(38,2), product_id uuid, product_name varchar(255), quantity integer, total_amount numeric(38,2), "order_id" bigint not null, primary key (id))
Hibernate: alter table if exists order_item add constraint FKsgmrolp8skulmo2vyb20c4mfk foreign key ("order_id") references "order"
2025-08-21T20:55:00.535-03:00  INFO 25230 --- [ordering] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-21T20:55:00.870-03:00  INFO 25230 --- [ordering] [    Test worker] c.a.a.o.d.model.repository.OrdersTest    : Started OrdersTest in 2.321 seconds (process running for 3.418)
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 where ope1_0.id=?
Hibernate: insert into "order" (billing_address_city,billing_address_complement,billing_address_neighborhood,billing_address_number,billing_address_state,billing_address_street,billing_address_zip_code,billing_document,email,billing_first_name,billing_last_name,billing_phone,canceled_at,create_by_user_id,customer_id,last_modified_at,last_modified_by_user_id,paid_at,payment_method,placed_at,ready_at,shipping_address_city,shipping_address_complement,shipping_address_neighborhood,shipping_address_number,shipping_address_state,shipping_address_street,shipping_address_zip_code,shipping_cost,shipping_expected_date,shipping_recipient_document,shipping_recipient_first_name,shipping_recipient_last_name,shipping_recipient_phone,status,total_amount,total_items,version,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,i1_0."order_id",i1_0.id,i1_0.price,i1_0.product_id,i1_0.product_name,i1_0.quantity,i1_0.total_amount,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 left join order_item i1_0 on ope1_0.id=i1_0."order_id" where ope1_0.id=?
Hibernate: select oipe1_0.id,oipe1_0."order_id",o1_0.id,o1_0.billing_address_city,o1_0.billing_address_complement,o1_0.billing_address_neighborhood,o1_0.billing_address_number,o1_0.billing_address_state,o1_0.billing_address_street,o1_0.billing_address_zip_code,o1_0.billing_document,o1_0.email,o1_0.billing_first_name,o1_0.billing_last_name,o1_0.billing_phone,o1_0.canceled_at,o1_0.create_by_user_id,o1_0.customer_id,o1_0.last_modified_at,o1_0.last_modified_by_user_id,o1_0.paid_at,o1_0.payment_method,o1_0.placed_at,o1_0.ready_at,o1_0.shipping_address_city,o1_0.shipping_address_complement,o1_0.shipping_address_neighborhood,o1_0.shipping_address_number,o1_0.shipping_address_state,o1_0.shipping_address_street,o1_0.shipping_address_zip_code,o1_0.shipping_cost,o1_0.shipping_expected_date,o1_0.shipping_recipient_document,o1_0.shipping_recipient_first_name,o1_0.shipping_recipient_last_name,o1_0.shipping_recipient_phone,o1_0.status,o1_0.total_amount,o1_0.total_items,o1_0.version,oipe1_0.price,oipe1_0.product_id,oipe1_0.product_name,oipe1_0.quantity,oipe1_0.total_amount from order_item oipe1_0 join "order" o1_0 on o1_0.id=oipe1_0."order_id" where oipe1_0.id=?
Hibernate: select oipe1_0.id,oipe1_0."order_id",o1_0.id,o1_0.billing_address_city,o1_0.billing_address_complement,o1_0.billing_address_neighborhood,o1_0.billing_address_number,o1_0.billing_address_state,o1_0.billing_address_street,o1_0.billing_address_zip_code,o1_0.billing_document,o1_0.email,o1_0.billing_first_name,o1_0.billing_last_name,o1_0.billing_phone,o1_0.canceled_at,o1_0.create_by_user_id,o1_0.customer_id,o1_0.last_modified_at,o1_0.last_modified_by_user_id,o1_0.paid_at,o1_0.payment_method,o1_0.placed_at,o1_0.ready_at,o1_0.shipping_address_city,o1_0.shipping_address_complement,o1_0.shipping_address_neighborhood,o1_0.shipping_address_number,o1_0.shipping_address_state,o1_0.shipping_address_street,o1_0.shipping_address_zip_code,o1_0.shipping_cost,o1_0.shipping_expected_date,o1_0.shipping_recipient_document,o1_0.shipping_recipient_first_name,o1_0.shipping_recipient_last_name,o1_0.shipping_recipient_phone,o1_0.status,o1_0.total_amount,o1_0.total_items,o1_0.version,oipe1_0.price,oipe1_0.product_id,oipe1_0.product_name,oipe1_0.quantity,oipe1_0.total_amount from order_item oipe1_0 join "order" o1_0 on o1_0.id=oipe1_0."order_id" where oipe1_0.id=?
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: update "order" set billing_address_city=?,billing_address_complement=?,billing_address_neighborhood=?,billing_address_number=?,billing_address_state=?,billing_address_street=?,billing_address_zip_code=?,billing_document=?,email=?,billing_first_name=?,billing_last_name=?,billing_phone=?,canceled_at=?,create_by_user_id=?,customer_id=?,last_modified_at=?,last_modified_by_user_id=?,paid_at=?,payment_method=?,placed_at=?,ready_at=?,shipping_address_city=?,shipping_address_complement=?,shipping_address_neighborhood=?,shipping_address_number=?,shipping_address_state=?,shipping_address_street=?,shipping_address_zip_code=?,shipping_cost=?,shipping_expected_date=?,shipping_recipient_document=?,shipping_recipient_first_name=?,shipping_recipient_last_name=?,shipping_recipient_phone=?,status=?,total_amount=?,total_items=?,version=? where id=? and version=?
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,i1_0."order_id",i1_0.id,i1_0.price,i1_0.product_id,i1_0.product_name,i1_0.quantity,i1_0.total_amount,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 left join order_item i1_0 on ope1_0.id=i1_0."order_id" where ope1_0.id=?
Hibernate: select oipe1_0.id,oipe1_0."order_id",o1_0.id,o1_0.billing_address_city,o1_0.billing_address_complement,o1_0.billing_address_neighborhood,o1_0.billing_address_number,o1_0.billing_address_state,o1_0.billing_address_street,o1_0.billing_address_zip_code,o1_0.billing_document,o1_0.email,o1_0.billing_first_name,o1_0.billing_last_name,o1_0.billing_phone,o1_0.canceled_at,o1_0.create_by_user_id,o1_0.customer_id,o1_0.last_modified_at,o1_0.last_modified_by_user_id,o1_0.paid_at,o1_0.payment_method,o1_0.placed_at,o1_0.ready_at,o1_0.shipping_address_city,o1_0.shipping_address_complement,o1_0.shipping_address_neighborhood,o1_0.shipping_address_number,o1_0.shipping_address_state,o1_0.shipping_address_street,o1_0.shipping_address_zip_code,o1_0.shipping_cost,o1_0.shipping_expected_date,o1_0.shipping_recipient_document,o1_0.shipping_recipient_first_name,o1_0.shipping_recipient_last_name,o1_0.shipping_recipient_phone,o1_0.status,o1_0.total_amount,o1_0.total_items,o1_0.version,oipe1_0.price,oipe1_0.product_id,oipe1_0.product_name,oipe1_0.quantity,oipe1_0.total_amount from order_item oipe1_0 join "order" o1_0 on o1_0.id=oipe1_0."order_id" where oipe1_0.id=?
Hibernate: select oipe1_0.id,oipe1_0."order_id",o1_0.id,o1_0.billing_address_city,o1_0.billing_address_complement,o1_0.billing_address_neighborhood,o1_0.billing_address_number,o1_0.billing_address_state,o1_0.billing_address_street,o1_0.billing_address_zip_code,o1_0.billing_document,o1_0.email,o1_0.billing_first_name,o1_0.billing_last_name,o1_0.billing_phone,o1_0.canceled_at,o1_0.create_by_user_id,o1_0.customer_id,o1_0.last_modified_at,o1_0.last_modified_by_user_id,o1_0.paid_at,o1_0.payment_method,o1_0.placed_at,o1_0.ready_at,o1_0.shipping_address_city,o1_0.shipping_address_complement,o1_0.shipping_address_neighborhood,o1_0.shipping_address_number,o1_0.shipping_address_state,o1_0.shipping_address_street,o1_0.shipping_address_zip_code,o1_0.shipping_cost,o1_0.shipping_expected_date,o1_0.shipping_recipient_document,o1_0.shipping_recipient_first_name,o1_0.shipping_recipient_last_name,o1_0.shipping_recipient_phone,o1_0.status,o1_0.total_amount,o1_0.total_items,o1_0.version,oipe1_0.price,oipe1_0.product_id,oipe1_0.product_name,oipe1_0.quantity,oipe1_0.total_amount from order_item oipe1_0 join "order" o1_0 on o1_0.id=oipe1_0."order_id" where oipe1_0.id=?
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: update "order" set billing_address_city=?,billing_address_complement=?,billing_address_neighborhood=?,billing_address_number=?,billing_address_state=?,billing_address_street=?,billing_address_zip_code=?,billing_document=?,email=?,billing_first_name=?,billing_last_name=?,billing_phone=?,canceled_at=?,create_by_user_id=?,customer_id=?,last_modified_at=?,last_modified_by_user_id=?,paid_at=?,payment_method=?,placed_at=?,ready_at=?,shipping_address_city=?,shipping_address_complement=?,shipping_address_neighborhood=?,shipping_address_number=?,shipping_address_state=?,shipping_address_street=?,shipping_address_zip_code=?,shipping_cost=?,shipping_expected_date=?,shipping_recipient_document=?,shipping_recipient_first_name=?,shipping_recipient_last_name=?,shipping_recipient_phone=?,status=?,total_amount=?,total_items=?,version=? where id=? and version=?
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 where ope1_0.id=?
Hibernate: insert into "order" (billing_address_city,billing_address_complement,billing_address_neighborhood,billing_address_number,billing_address_state,billing_address_street,billing_address_zip_code,billing_document,email,billing_first_name,billing_last_name,billing_phone,canceled_at,create_by_user_id,customer_id,last_modified_at,last_modified_by_user_id,paid_at,payment_method,placed_at,ready_at,shipping_address_city,shipping_address_complement,shipping_address_neighborhood,shipping_address_number,shipping_address_state,shipping_address_street,shipping_address_zip_code,shipping_cost,shipping_expected_date,shipping_recipient_document,shipping_recipient_first_name,shipping_recipient_last_name,shipping_recipient_phone,status,total_amount,total_items,version,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 where ope1_0.id=?
Hibernate: insert into "order" (billing_address_city,billing_address_complement,billing_address_neighborhood,billing_address_number,billing_address_state,billing_address_street,billing_address_zip_code,billing_document,email,billing_first_name,billing_last_name,billing_phone,canceled_at,create_by_user_id,customer_id,last_modified_at,last_modified_by_user_id,paid_at,payment_method,placed_at,ready_at,shipping_address_city,shipping_address_complement,shipping_address_neighborhood,shipping_address_number,shipping_address_state,shipping_address_street,shipping_address_zip_code,shipping_cost,shipping_expected_date,shipping_recipient_document,shipping_recipient_first_name,shipping_recipient_last_name,shipping_recipient_phone,status,total_amount,total_items,version,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,i1_0."order_id",i1_0.id,i1_0.price,i1_0.product_id,i1_0.product_name,i1_0.quantity,i1_0.total_amount,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 left join order_item i1_0 on ope1_0.id=i1_0."order_id" where ope1_0.id=?
Hibernate: select oipe1_0.id,oipe1_0."order_id",o1_0.id,o1_0.billing_address_city,o1_0.billing_address_complement,o1_0.billing_address_neighborhood,o1_0.billing_address_number,o1_0.billing_address_state,o1_0.billing_address_street,o1_0.billing_address_zip_code,o1_0.billing_document,o1_0.email,o1_0.billing_first_name,o1_0.billing_last_name,o1_0.billing_phone,o1_0.canceled_at,o1_0.create_by_user_id,o1_0.customer_id,o1_0.last_modified_at,o1_0.last_modified_by_user_id,o1_0.paid_at,o1_0.payment_method,o1_0.placed_at,o1_0.ready_at,o1_0.shipping_address_city,o1_0.shipping_address_complement,o1_0.shipping_address_neighborhood,o1_0.shipping_address_number,o1_0.shipping_address_state,o1_0.shipping_address_street,o1_0.shipping_address_zip_code,o1_0.shipping_cost,o1_0.shipping_expected_date,o1_0.shipping_recipient_document,o1_0.shipping_recipient_first_name,o1_0.shipping_recipient_last_name,o1_0.shipping_recipient_phone,o1_0.status,o1_0.total_amount,o1_0.total_items,o1_0.version,oipe1_0.price,oipe1_0.product_id,oipe1_0.product_name,oipe1_0.quantity,oipe1_0.total_amount from order_item oipe1_0 join "order" o1_0 on o1_0.id=oipe1_0."order_id" where oipe1_0.id=?
Hibernate: select oipe1_0.id,oipe1_0."order_id",o1_0.id,o1_0.billing_address_city,o1_0.billing_address_complement,o1_0.billing_address_neighborhood,o1_0.billing_address_number,o1_0.billing_address_state,o1_0.billing_address_street,o1_0.billing_address_zip_code,o1_0.billing_document,o1_0.email,o1_0.billing_first_name,o1_0.billing_last_name,o1_0.billing_phone,o1_0.canceled_at,o1_0.create_by_user_id,o1_0.customer_id,o1_0.last_modified_at,o1_0.last_modified_by_user_id,o1_0.paid_at,o1_0.payment_method,o1_0.placed_at,o1_0.ready_at,o1_0.shipping_address_city,o1_0.shipping_address_complement,o1_0.shipping_address_neighborhood,o1_0.shipping_address_number,o1_0.shipping_address_state,o1_0.shipping_address_street,o1_0.shipping_address_zip_code,o1_0.shipping_cost,o1_0.shipping_expected_date,o1_0.shipping_recipient_document,o1_0.shipping_recipient_first_name,o1_0.shipping_recipient_last_name,o1_0.shipping_recipient_phone,o1_0.status,o1_0.total_amount,o1_0.total_items,o1_0.version,oipe1_0.price,oipe1_0.product_id,oipe1_0.product_name,oipe1_0.quantity,oipe1_0.total_amount from order_item oipe1_0 join "order" o1_0 on o1_0.id=oipe1_0."order_id" where oipe1_0.id=?
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: update "order" set billing_address_city=?,billing_address_complement=?,billing_address_neighborhood=?,billing_address_number=?,billing_address_state=?,billing_address_street=?,billing_address_zip_code=?,billing_document=?,email=?,billing_first_name=?,billing_last_name=?,billing_phone=?,canceled_at=?,create_by_user_id=?,customer_id=?,last_modified_at=?,last_modified_by_user_id=?,paid_at=?,payment_method=?,placed_at=?,ready_at=?,shipping_address_city=?,shipping_address_complement=?,shipping_address_neighborhood=?,shipping_address_number=?,shipping_address_state=?,shipping_address_street=?,shipping_address_zip_code=?,shipping_cost=?,shipping_expected_date=?,shipping_recipient_document=?,shipping_recipient_first_name=?,shipping_recipient_last_name=?,shipping_recipient_phone=?,status=?,total_amount=?,total_items=?,version=? where id=? and version=?
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 where ope1_0.id=?
Hibernate: insert into "order" (billing_address_city,billing_address_complement,billing_address_neighborhood,billing_address_number,billing_address_state,billing_address_street,billing_address_zip_code,billing_document,email,billing_first_name,billing_last_name,billing_phone,canceled_at,create_by_user_id,customer_id,last_modified_at,last_modified_by_user_id,paid_at,payment_method,placed_at,ready_at,shipping_address_city,shipping_address_complement,shipping_address_neighborhood,shipping_address_number,shipping_address_state,shipping_address_street,shipping_address_zip_code,shipping_cost,shipping_expected_date,shipping_recipient_document,shipping_recipient_first_name,shipping_recipient_last_name,shipping_recipient_phone,status,total_amount,total_items,version,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,i1_0."order_id",i1_0.id,i1_0.price,i1_0.product_id,i1_0.product_name,i1_0.quantity,i1_0.total_amount,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 left join order_item i1_0 on ope1_0.id=i1_0."order_id" where ope1_0.id=?
Hibernate: select oipe1_0.id,oipe1_0."order_id",o1_0.id,o1_0.billing_address_city,o1_0.billing_address_complement,o1_0.billing_address_neighborhood,o1_0.billing_address_number,o1_0.billing_address_state,o1_0.billing_address_street,o1_0.billing_address_zip_code,o1_0.billing_document,o1_0.email,o1_0.billing_first_name,o1_0.billing_last_name,o1_0.billing_phone,o1_0.canceled_at,o1_0.create_by_user_id,o1_0.customer_id,o1_0.last_modified_at,o1_0.last_modified_by_user_id,o1_0.paid_at,o1_0.payment_method,o1_0.placed_at,o1_0.ready_at,o1_0.shipping_address_city,o1_0.shipping_address_complement,o1_0.shipping_address_neighborhood,o1_0.shipping_address_number,o1_0.shipping_address_state,o1_0.shipping_address_street,o1_0.shipping_address_zip_code,o1_0.shipping_cost,o1_0.shipping_expected_date,o1_0.shipping_recipient_document,o1_0.shipping_recipient_first_name,o1_0.shipping_recipient_last_name,o1_0.shipping_recipient_phone,o1_0.status,o1_0.total_amount,o1_0.total_items,o1_0.version,oipe1_0.price,oipe1_0.product_id,oipe1_0.product_name,oipe1_0.quantity,oipe1_0.total_amount from order_item oipe1_0 join "order" o1_0 on o1_0.id=oipe1_0."order_id" where oipe1_0.id=?
Hibernate: select oipe1_0.id,oipe1_0."order_id",o1_0.id,o1_0.billing_address_city,o1_0.billing_address_complement,o1_0.billing_address_neighborhood,o1_0.billing_address_number,o1_0.billing_address_state,o1_0.billing_address_street,o1_0.billing_address_zip_code,o1_0.billing_document,o1_0.email,o1_0.billing_first_name,o1_0.billing_last_name,o1_0.billing_phone,o1_0.canceled_at,o1_0.create_by_user_id,o1_0.customer_id,o1_0.last_modified_at,o1_0.last_modified_by_user_id,o1_0.paid_at,o1_0.payment_method,o1_0.placed_at,o1_0.ready_at,o1_0.shipping_address_city,o1_0.shipping_address_complement,o1_0.shipping_address_neighborhood,o1_0.shipping_address_number,o1_0.shipping_address_state,o1_0.shipping_address_street,o1_0.shipping_address_zip_code,o1_0.shipping_cost,o1_0.shipping_expected_date,o1_0.shipping_recipient_document,o1_0.shipping_recipient_first_name,o1_0.shipping_recipient_last_name,o1_0.shipping_recipient_phone,o1_0.status,o1_0.total_amount,o1_0.total_items,o1_0.version,oipe1_0.price,oipe1_0.product_id,oipe1_0.product_name,oipe1_0.quantity,oipe1_0.total_amount from order_item oipe1_0 join "order" o1_0 on o1_0.id=oipe1_0."order_id" where oipe1_0.id=?
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: insert into order_item ("order_id",price,product_id,product_name,quantity,total_amount,id) values (?,?,?,?,?,?,?)
Hibernate: update "order" set billing_address_city=?,billing_address_complement=?,billing_address_neighborhood=?,billing_address_number=?,billing_address_state=?,billing_address_street=?,billing_address_zip_code=?,billing_document=?,email=?,billing_first_name=?,billing_last_name=?,billing_phone=?,canceled_at=?,create_by_user_id=?,customer_id=?,last_modified_at=?,last_modified_by_user_id=?,paid_at=?,payment_method=?,placed_at=?,ready_at=?,shipping_address_city=?,shipping_address_complement=?,shipping_address_neighborhood=?,shipping_address_number=?,shipping_address_state=?,shipping_address_street=?,shipping_address_zip_code=?,shipping_cost=?,shipping_expected_date=?,shipping_recipient_document=?,shipping_recipient_first_name=?,shipping_recipient_last_name=?,shipping_recipient_phone=?,status=?,total_amount=?,total_items=?,version=? where id=? and version=?
Hibernate: select ope1_0.id,ope1_0.billing_address_city,ope1_0.billing_address_complement,ope1_0.billing_address_neighborhood,ope1_0.billing_address_number,ope1_0.billing_address_state,ope1_0.billing_address_street,ope1_0.billing_address_zip_code,ope1_0.billing_document,ope1_0.email,ope1_0.billing_first_name,ope1_0.billing_last_name,ope1_0.billing_phone,ope1_0.canceled_at,ope1_0.create_by_user_id,ope1_0.customer_id,i1_0."order_id",i1_0.id,i1_0.price,i1_0.product_id,i1_0.product_name,i1_0.quantity,i1_0.total_amount,ope1_0.last_modified_at,ope1_0.last_modified_by_user_id,ope1_0.paid_at,ope1_0.payment_method,ope1_0.placed_at,ope1_0.ready_at,ope1_0.shipping_address_city,ope1_0.shipping_address_complement,ope1_0.shipping_address_neighborhood,ope1_0.shipping_address_number,ope1_0.shipping_address_state,ope1_0.shipping_address_street,ope1_0.shipping_address_zip_code,ope1_0.shipping_cost,ope1_0.shipping_expected_date,ope1_0.shipping_recipient_document,ope1_0.shipping_recipient_first_name,ope1_0.shipping_recipient_last_name,ope1_0.shipping_recipient_phone,ope1_0.status,ope1_0.total_amount,ope1_0.total_items,ope1_0.version from "order" ope1_0 left join order_item i1_0 on ope1_0.id=i1_0."order_id" where ope1_0.id=?
]]></system-out>
  <system-err><![CDATA[Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
WARNING: A Java agent has been loaded dynamically (/home/marco/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy-agent/1.15.11/a38b16385e867f59a641330f0362ebe742788ed8/byte-buddy-agent-1.15.11.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
</testsuite>
